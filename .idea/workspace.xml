<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="a7f82190-91c9-4974-9903-ad076455b670" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/RPS.py" beforeDir="false" afterPath="$PROJECT_DIR$/RPS.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="25cNmRnbByAdRUqnkOVVT0gRNtb" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="last_opened_file_path" value="$USER_HOME$" />
    <property name="settings.editor.selected.configurable" value="org.jetbrains.plugins.github.ui.GithubSettingsConfigurable" />
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="'Inital Commit'" />
    <MESSAGE value="feat: beginning to build model for rl&#10;&#10;Created a model to use for my Deep Q-Learning agent model sizes are :&#10;Input: 10&#10;Hidden-1: 10&#10;Hidden-2: 5&#10;Output: 3" />
    <MESSAGE value="feat: first model&#10;&#10;Trained my first model with multiclass classification:&#10;Accuracy = 0.3536 (Goal = 0.4000)&#10;&#10;Model &#10;Input: 30 (Flattened [10,3])&#10;Hidden-1: Dense - 20 - ReLU&#10;Hidden-2: Dense - 10 - ReLU&#10;Hidden-3: Dense - 5 - Sigmoid&#10;Output: Dense - 3 - Softmax" />
    <MESSAGE value="feat: program works&#10;&#10;Needs work:&#10;Model works but doesn't pass 2/4 test cases&#10;Player function needs improvement it runs too slow" />
    <MESSAGE value="feat: program works&#10;&#10;Needs work:&#10;Model works but doesn't pass 2/4 test cases&#10;Improved runspeed 10x" />
    <MESSAGE value="feat: Nueral netowrk Hypertuning&#10;&#10;Needs work:&#10;Model works but doesn't pass 2/4 test cases&#10;Model:&#10;model = Sequential()&#10;    model.add(Dense(120, input_dim = 60, activation = 'relu')) # Rectified Linear Unit Activation Function&#10;    model.add(Dropout(0.5))&#10;    model.add(Dense(80, activation = 'relu'))&#10;    model.add(Dropout(0.5))&#10;    model.add(Dense(40, activation = 'sigmoid'))&#10;    model.add(Dropout(0.5))&#10;    model.add(Dense(20, activation = 'relu'))&#10;    model.add(Dense(3, activation = 'softmax')) # Softmax for multi-class classification&#10;    # Compile model here&#10;    model.compile(loss = 'categorical_crossentropy', optimizer = 'adam', metrics = ['accuracy'])" />
    <MESSAGE value="feat: Adding my own move history to the input&#10;&#10;Needs work:&#10;Model works but doesn't pass 2/4 test cases&#10;Model:&#10;model = Sequential()&#10;    model.add(Dense(120, input_dim = 60, activation = 'relu')) # Rectified Linear Unit Activation Function&#10;    model.add(Dropout(0.5))&#10;    model.add(Dense(80, activation = 'relu'))&#10;    model.add(Dropout(0.5))&#10;    model.add(Dense(40, activation = 'sigmoid'))&#10;    model.add(Dropout(0.5))&#10;    model.add(Dense(20, activation = 'relu'))&#10;    model.add(Dense(3, activation = 'softmax')) # Softmax for multi-class classification&#10;    # Compile model here&#10;    model.compile(loss = 'categorical_crossentropy', optimizer = 'adam', metrics = ['accuracy'])" />
    <MESSAGE value="feat: Extended input to last 30 moves&#10;&#10;Needs work:&#10;Model works but doesn't pass 2/4 test cases&#10;Model:&#10;model = Sequential()&#10;    model.add(Dense(240, input_dim = 189, activation = 'relu')) # Rectified Linear Unit Activation Function&#10;    model.add(Dropout(0.5))&#10;    model.add(Dense(120, activation = 'relu'))&#10;    model.add(Dropout(0.5))&#10;    model.add(Dense(60, activation = 'sigmoid'))&#10;    model.add(Dropout(0.5))&#10;    model.add(Dense(30, activation = 'relu'))&#10;    model.add(Dropout(0.5))&#10;    model.add(Dense(10, activation = 'relu'))    &#10;    model.add(Dense(3, activation = 'softmax')) # Softmax for multi-class classification&#10;    # Compile model here&#10;    model.compile(loss = 'categorical_crossentropy', optimizer = 'adam', metrics = ['accuracy'])" />
    <option name="LAST_COMMIT_MESSAGE" value="feat: Extended input to last 30 moves&#10;&#10;Needs work:&#10;Model works but doesn't pass 2/4 test cases&#10;Model:&#10;model = Sequential()&#10;    model.add(Dense(240, input_dim = 189, activation = 'relu')) # Rectified Linear Unit Activation Function&#10;    model.add(Dropout(0.5))&#10;    model.add(Dense(120, activation = 'relu'))&#10;    model.add(Dropout(0.5))&#10;    model.add(Dense(60, activation = 'sigmoid'))&#10;    model.add(Dropout(0.5))&#10;    model.add(Dense(30, activation = 'relu'))&#10;    model.add(Dropout(0.5))&#10;    model.add(Dense(10, activation = 'relu'))    &#10;    model.add(Dense(3, activation = 'softmax')) # Softmax for multi-class classification&#10;    # Compile model here&#10;    model.compile(loss = 'categorical_crossentropy', optimizer = 'adam', metrics = ['accuracy'])" />
  </component>
  <component name="WindowStateProjectService">
    <state x="2673" y="21" key="CommitChangelistDialog2" timestamp="1647351433943">
      <screen x="1920" y="0" width="1920" height="1200" />
    </state>
    <state x="1150" y="118" key="CommitChangelistDialog2/0.0.1920.1160/1920.0.1920.1200@0.0.1920.1160" timestamp="1646252963021" />
    <state x="2673" y="21" key="CommitChangelistDialog2/0.0.1920.1160/1920.0.1920.1200@1920.0.1920.1200" timestamp="1647351433943" />
    <state x="820" y="491" key="Github.Dialog.Accounts.Choose" timestamp="1645822791149">
      <screen x="0" y="0" width="1920" height="1160" />
    </state>
    <state x="820" y="491" key="Github.Dialog.Accounts.Choose/0.0.1920.1160/1920.0.1920.1200@0.0.1920.1160" timestamp="1645822791149" />
    <state x="2381" y="244" key="SettingsEditor" timestamp="1646428392282">
      <screen x="1920" y="0" width="1920" height="1200" />
    </state>
    <state x="2381" y="244" key="SettingsEditor/0.0.1920.1160/1920.0.1920.1200@1920.0.1920.1200" timestamp="1646428392282" />
    <state x="2472" y="323" key="Vcs.Push.Dialog.v2" timestamp="1647351438266">
      <screen x="1920" y="0" width="1920" height="1200" />
    </state>
    <state x="552" y="312" key="Vcs.Push.Dialog.v2/0.0.1920.1160/1920.0.1920.1200@0.0.1920.1160" timestamp="1646252967258" />
    <state x="2472" y="323" key="Vcs.Push.Dialog.v2/0.0.1920.1160/1920.0.1920.1200@1920.0.1920.1200" timestamp="1647351438266" />
    <state x="2543" y="265" width="672" height="678" key="search.everywhere.popup" timestamp="1646413294686">
      <screen x="1920" y="0" width="1920" height="1200" />
    </state>
    <state x="2543" y="265" width="672" height="678" key="search.everywhere.popup/0.0.1920.1160/1920.0.1920.1200@1920.0.1920.1200" timestamp="1646413294686" />
  </component>
</project>